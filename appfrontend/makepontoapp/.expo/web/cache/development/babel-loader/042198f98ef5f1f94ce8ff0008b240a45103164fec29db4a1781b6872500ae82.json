{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from \"../store/auth-context\";\nfunction myPost(url, token) {\n  var data,\n    _args = arguments;\n  return _regeneratorRuntime.async(function myPost$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        data = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n        axios.post(url, data, {\n          headers: {\n            Authorization: \"\" + token\n          }\n        }).then(function (response) {\n          console.log(\"response.data\");\n          console.log(response.data);\n          return response.data;\n        }).catch(function (error) {\n          console.error('Error:', error);\n          return error;\n        });\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function disableSomeHour(url, token) {\n  var algo = myPost(url, token);\n  return algo;\n}","map":{"version":3,"names":["axios","useContext","useEffect","useState","AuthContext","myPost","url","token","data","_args","arguments","_regeneratorRuntime","async","myPost$","_context","prev","next","length","undefined","post","headers","Authorization","then","response","console","log","catch","error","stop","Promise","disableSomeHour","algo"],"sources":["C:/MAMP/htdocs/makeponto/appfrontend/makepontoapp/util/welcome.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../store/auth-context';\r\n\r\nasync function myPost(url,token,data = {}) {\r\n\r\n\r\n  \r\n    axios.post(url, data, {\r\n        headers: {\r\n          Authorization: `${token}`  // Include the token in the Authorization header\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(\"response.data\")\r\n        console.log(response.data)\r\n        return response.data;\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n        return error; \r\n      });\r\n  \r\n}\r\n\r\nexport function disableSomeHour(url,token) {\r\n  let algo = myPost(url,token);\r\n    return algo;\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW;AAEpB,SAAeC,MAAMA,CAACC,GAAG,EAACC,KAAK;EAAA,IAAAC,IAAA;IAAAC,KAAA,GAAAC,SAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,QAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAACR,IAAI,GAAAC,KAAA,CAAAQ,MAAA,QAAAR,KAAA,QAAAS,SAAA,GAAAT,KAAA,MAAG,CAAC,CAAC;QAIrCT,KAAK,CAACmB,IAAI,CAACb,GAAG,EAAEE,IAAI,EAAE;UAClBY,OAAO,EAAE;YACPC,aAAa,OAAKd;UACpB;QACF,CAAC,CAAC,CACDe,IAAI,CAAC,UAACC,QAAQ,EAAK;UAClBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5BD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACf,IAAI,CAAC;UAC1B,OAAOe,QAAQ,CAACf,IAAI;QAEtB,CAAC,CAAC,CACDkB,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9B,OAAOA,KAAK;QACd,CAAC,CAAC;MAAC;MAAA;QAAA,OAAAb,QAAA,CAAAc,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAIT,OAAO,SAASC,eAAeA,CAACxB,GAAG,EAACC,KAAK,EAAE;EACzC,IAAIwB,IAAI,GAAG1B,MAAM,CAACC,GAAG,EAACC,KAAK,CAAC;EAC1B,OAAOwB,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}