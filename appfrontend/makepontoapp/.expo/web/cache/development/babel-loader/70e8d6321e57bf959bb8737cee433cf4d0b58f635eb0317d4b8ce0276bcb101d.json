{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\nimport FlatButton from \"../ui/FlatButton\";\nimport AuthForm from \"./AuthForm\";\nimport { Colors } from \"../../constants/styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AuthContent(_ref) {\n  var isLogin = _ref.isLogin,\n    onAuthenticate = _ref.onAuthenticate;\n  var navigation = useNavigation();\n  var _useState = useState({\n      email: false,\n      password: false,\n      confirmEmail: false,\n      confirmPassword: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    credentialsInvalid = _useState2[0],\n    setCredentialsInvalid = _useState2[1];\n  function switchAuthModeHandler() {\n    if (isLogin) {\n      navigation.replace('Signup');\n    } else {\n      navigation.replace('Login');\n    }\n  }\n  function submitHandler(credentials) {\n    var email = credentials.email,\n      confirmEmail = credentials.confirmEmail,\n      password = credentials.password,\n      confirmPassword = credentials.confirmPassword;\n    email = email.trim();\n    password = password.trim();\n    var emailIsValid = email.includes('@');\n    var passwordIsValid = password.length > 2;\n    var emailsAreEqual = email === confirmEmail;\n    var passwordsAreEqual = password === confirmPassword;\n    if (!emailIsValid || !passwordIsValid || !isLogin && (!emailsAreEqual || !passwordsAreEqual)) {\n      Alert.alert('Invalid input', 'Please check your entered credentials.');\n      setCredentialsInvalid({\n        email: !emailIsValid,\n        confirmEmail: !emailIsValid || !emailsAreEqual,\n        password: !passwordIsValid,\n        confirmPassword: !passwordIsValid || !passwordsAreEqual\n      });\n      return;\n    }\n    onAuthenticate({\n      email: email,\n      password: password\n    });\n  }\n  return _jsxs(View, {\n    style: styles.authContent,\n    children: [_jsx(AuthForm, {\n      isLogin: isLogin,\n      onSubmit: submitHandler,\n      credentialsInvalid: credentialsInvalid\n    }), _jsx(View, {\n      style: styles.buttons,\n      children: _jsx(FlatButton, {\n        onPress: switchAuthModeHandler,\n        children: isLogin ? 'Create a new user' : 'Log in instead'\n      })\n    })]\n  });\n}\nexport default AuthContent;\nvar styles = StyleSheet.create({\n  authContent: {\n    marginTop: 64,\n    marginHorizontal: 32,\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.primary800,\n    elevation: 2,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.35,\n    shadowRadius: 4\n  },\n  buttons: {\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["useState","Alert","StyleSheet","View","useNavigation","FlatButton","AuthForm","Colors","jsx","_jsx","jsxs","_jsxs","AuthContent","_ref","isLogin","onAuthenticate","navigation","_useState","email","password","confirmEmail","confirmPassword","_useState2","_slicedToArray","credentialsInvalid","setCredentialsInvalid","switchAuthModeHandler","replace","submitHandler","credentials","trim","emailIsValid","includes","passwordIsValid","length","emailsAreEqual","passwordsAreEqual","alert","style","styles","authContent","children","onSubmit","buttons","onPress","create","marginTop","marginHorizontal","padding","borderRadius","backgroundColor","primary800","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"sources":["C:/MAMP/htdocs/makeponto/appfrontend/makepontoapp/components/Auth/AuthContent.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { Alert, StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport FlatButton from '../ui/FlatButton';\r\nimport AuthForm from './AuthForm';\r\nimport { Colors } from '../../constants/styles';\r\n\r\nfunction AuthContent({ isLogin, onAuthenticate }) {\r\n  const navigation = useNavigation();\r\n\r\n  const [credentialsInvalid, setCredentialsInvalid] = useState({\r\n    email: false,\r\n    password: false,\r\n    confirmEmail: false,\r\n    confirmPassword: false,\r\n  });\r\n\r\n  function switchAuthModeHandler() {\r\n    if (isLogin) {\r\n      navigation.replace('Signup');\r\n    } else {\r\n      navigation.replace('Login');\r\n    }\r\n  }\r\n\r\n  function submitHandler(credentials) {\r\n    let { email, confirmEmail, password, confirmPassword } = credentials;\r\n\r\n    email = email.trim();\r\n    password = password.trim();\r\n\r\n    const emailIsValid = email.includes('@');\r\n    const passwordIsValid = password.length > 2;\r\n    const emailsAreEqual = email === confirmEmail;\r\n    const passwordsAreEqual = password === confirmPassword;\r\n\r\n    if (\r\n      !emailIsValid ||\r\n      !passwordIsValid ||\r\n      (!isLogin && (!emailsAreEqual || !passwordsAreEqual))\r\n    ) {\r\n      Alert.alert('Invalid input', 'Please check your entered credentials.');\r\n      setCredentialsInvalid({\r\n        email: !emailIsValid,\r\n        confirmEmail: !emailIsValid || !emailsAreEqual,\r\n        password: !passwordIsValid,\r\n        confirmPassword: !passwordIsValid || !passwordsAreEqual,\r\n      });\r\n      return;\r\n    }\r\n    onAuthenticate({ email, password });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.authContent}>\r\n      <AuthForm\r\n        isLogin={isLogin}\r\n        onSubmit={submitHandler}\r\n        credentialsInvalid={credentialsInvalid}\r\n      />\r\n      <View style={styles.buttons}>\r\n        <FlatButton onPress={switchAuthModeHandler}>\r\n          {isLogin ? 'Create a new user' : 'Log in instead'}\r\n        </FlatButton>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthContent;\r\n\r\nconst styles = StyleSheet.create({\r\n  authContent: {\r\n    marginTop: 64,\r\n    marginHorizontal: 32,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    backgroundColor: Colors.primary800,\r\n    elevation: 2,\r\n    shadowColor: 'black',\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowOpacity: 0.35,\r\n    shadowRadius: 4,\r\n  },\r\n  buttons: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}